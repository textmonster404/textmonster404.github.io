var khanAnswers = {};
khanAnswers.algebra = {};
khanAnswers.miscFunctions = {};
khanAnswers.lists = {};
khanAnswers.lists.readingDotPlotsAndFrequencyTables = {};
khanAnswers.lists.readingDotPlotsAndFrequencyTables.maxOfList=function(list) {var max=0;for (var i=0;i<list.length;i++) {if (list[i]>max) {max=list[i];}};return(max)};
khanAnswers.lists.readingDotPlotsAndFrequencyTables.totalOfList=function(list) {var total=0;for (var i=0;i<list.length;i++) {total+=list[i];}return(total)};
khanAnswers.lists.readingDotPlotsAndFrequencyTables.leastOfList=function(list) {var min=list[0];for (var i=0;i<list.length;i++) {if (list[i]<min) {min=list[i];}};return(min)};
khanAnswers.lists.mean = function(list) {return(khanAnswers.lists.readingDotPlotsAndFrequencyTables.totalOfList(list)/list.length)};
khanAnswers.algebra.rateProblems2 = {};
khanAnswers.algebra.rateProblems2.hills = function(speed1,speed2,time) {return(((2*((speed1/60)*time))/(time+((speed1/speed2)*time)))*60)};
khanAnswers.algebra.rateProblems2.walls = function(time,people1,walls1,people2,walls2) {return((((time/walls1)*people1)*walls2)/people2)};
khanAnswers.trig={};
khanAnswers.trig.pythagoras={};
khanAnswers.trig.pythagoras.a = function(b,c) {return(Math.sqrt(c**2-b**2))};
khanAnswers.trig.pythagoras.b = function(a,c) {return(Math.sqrt(c**2-a**2))};
khanAnswers.trig.pythagoras.c = function(a,b) {return(Math.sqrt(a**2+b**2))};
khanAnswers.trig.h = {};
khanAnswers.trig.h.fromOppositeAndTheta = function(opposite,theta) {return(opposite/Math.sin(theta))};
khanAnswers.trig.h.fromAdjacentAndTheta = function(adjacent,theta) {return(adjacent/Math.cos(theta))};
khanAnswers.trig.a = {};
khanAnswers.trig.a.fromHypotenuseAndTheta = function(hypotenuse,theta) {return(hypotenuse*Math.cos(theta))};
khanAnswers.trig.a.fromOppositeAndTheta = function(opposite,theta) {return(opposite/Math.tan(theta))};
khanAnswers.trig.o = {};
khanAnswers.trig.o.fromHypotenuseAndTheta = function(hypotenuse,theta) {return(hypotenuse*Math.sin(theta))};
khanAnswers.trig.o.fromAdjacentAndTheta = function(adjacent,theta) {return(adjacent*Math.tan(theta))};
khanAnswers.lists.mode = function(list) {if (list.length == 0) {return null;};var modeMap = {},maxCount = 1,modes = [list[0]];for (var i = 0; i < list.length; i++) {var el = list[i];if (modeMap[el] == null) {modeMap[el] = 1;} else {modeMap[el]++;} if (modeMap[el] > maxCount) {modes = [el];maxCount = modeMap[el];} else if (modeMap[el] == maxCount) {modes.push(el);maxCount = modeMap[el];};};var lastMode = modes[0];var modesNoRepeat = [];var it = 0;for (var i=0;i<modes.length;i++) {if (lastMode !== modes[i] || i == 0) {modesNoRepeat[it]=modes[i];it++;}; lastMode = modes[i];};return(modesNoRepeat);};
khanAnswers.lists.median = function(list) {list.sort(function(a,b) {return(a - b);});if (list.length % 2 == 1) {return(list[Math.floor(list.length/2)]);} else {return(khanAnswers.lists.mean([list[list.length/2-1],list[list.length/2]]))}};
khanAnswers.fractionalExponents = {};
khanAnswers.fractionalExponents.rootToExponent = function(root,variable,power) {return(variable+"^("+power+'/'+root+")")};
khanAnswers.fractionalExponents.exponentToRoot = function(variable,numerator,denominator) {return(denominator+"√("+variable+"^"+numerator+")")};
khanAnswers.miscFunctions.factors = function(number) {var it=0;var listAns=[];for (var i=0;i<number;i++) {if ((number % (i+1)) == 0) {listAns[it] =i+1;it++;}}return(listAns)};
khanAnswers.miscFunctions.divideRemainder = function(dividend,divisor) {return(Math.floor(dividend/divisor)+" R"+dividend%divisor)};
khanAnswers.shapes = {};
khanAnswers.shapes.circle = {};
khanAnswers.shapes.circle.radiusToDiameter = function(radius) {return(2*radius)};
khanAnswers.shapes.circle.diameterToRadius = function(diameter) {return(diameter/2)};
khanAnswers.shapes.circle.radiusToCircumference = function(radius) {return((radius*2)+"π")};
khanAnswers.shapes.circle.diameterToCircumference = function(diameter) {return(diameter+"π")};
khanAnswers.shapes.circle.circumferenceToRadius = function(circumference) {return(parseInt(circumference)/(2))};
khanAnswers.shapes.circle.circumferenceToDiameter = function(circumference) {return(parseInt(circumference))};
khanAnswers.shapes.circle.diameterToCircumference = function(diameter) {return(diameter+"π")};
khanAnswers.shapes.circle.radiusToArea = function(radius) {return((radius**2)+"π")};
khanAnswers.shapes.circle.diameterToArea = function(diameter) {return((khanAnswers.shapes.circle.diameterToRadius(diameter)**2)+"π")};
khanAnswers.shapes.circle.circumferenceToArea = function(circumference) {return((khanAnswers.shapes.circle.circumferenceToRadius(circumference)**2)+"π")};
khanAnswers.shapes.area = {};
khanAnswers.shapes.area.square = function(length) {return(length**2)};
khanAnswers.shapes.area.rectangle = function(width,height) {return(width*height)};
khanAnswers.shapes.area.triangle =  {};
khanAnswers.shapes.area.triangle.baseHeight=function(base,height) {return(base*height/2)};
khanAnswers.shapes.area.triangle.sides=function(a,b,c) {var s=(a+b+c)/2;return(s*(s-a)*(s-b)*(s-c))};
khanAnswers.shapes.area.parallelogram = function(base,altitude) {return(base*altitude)};
khanAnswers.shapes.area.rhombus = function(base,altitude) {return(base*altitude)};
khanAnswers.shapes.area.trapezoid = function(base1,base2,height) {return(((base1+base2)*height)/2)};
khanAnswers.shapes.threeDimensions = {};
khanAnswers.shapes.threeDimensions.pythagoreanTheorem3D = {};
khanAnswers.shapes.threeDimensions.pythagoreanTheorem3D.diagonal = function(x,y,z) {return(Math.sqrt(x**2+y**2+z**2))};
khanAnswers.shapes.threeDimensions.pythagoreanTheorem3D.side = function(diagonal,y,z) {return(Math.sqrt(diagonal**2-y**2-z**2))};
khanAnswers.miscFunctions.squareRoot = function(number) {return(Math.sqrt(number))};
khanAnswers.shapes.threeDimensions.pythagoreanTheorem3D.pyramidTriPrism = {};
khanAnswers.shapes.threeDimensions.pythagoreanTheorem3D.pyramidTriPrism.base= function(height,slant) {return(khanAnswers.trig.pythagoras.a(height,slant)*2)};
khanAnswers.shapes.threeDimensions.pythagoreanTheorem3D.pyramidTriPrism.slant= function(base,height) {return(khanAnswers.trig.pythagoras.c(base/2,height))};
khanAnswers.shapes.threeDimensions.pythagoreanTheorem3D.pyramidTriPrism.height= function(base,slant) {return(khanAnswers.trig.pythagoras.a(base/2,slant))};
khanAnswers.data = {};
khanAnswers.data.comparingDataDisplays = {};
khanAnswers.data.comparingDataDisplays.interquartileRange = ["Box Plot"];
khanAnswers.data.comparingDataDisplays.exactValue = ["Dot Plot"];
khanAnswers.data.comparingDataDisplays.median = ["Box Plot","Dot Plot"];
khanAnswers.data.comparingDataDisplays.overOrUnderValue = ["Dot Plot","Histogram"];
khanAnswers.data.comparingDataDisplays.minOrMaxValue = ["Box Plot","Dot Plot"];
khanAnswers.data.comparingDataDisplays.totalValues = ["Dot Plot","Histogram"];
khanAnswers.lists.total = function(list) {var sumOfList=0;for (var i=0;i<list.length;i++) {sumOfList+=list[i]};return(sumOfList)};
khanAnswers.data.percents = {};
khanAnswers.data.percents.percentValueScaledDownUndo = function(percent,value) {return(value/(percent/100))};
khanAnswers.data.percents.percentValueScaledUpUndo = function(percent,value) {return(value*(percent/100))};
khanAnswers.data.percents.sampleOfTotal = function(sample,value,total) {return(Math.round(value/(sample/total)))};
khanAnswers.data.percents.valueFromSampleListOfTotal = function(list,total,indexOfValue) {return(Math.round(list[indexOfValue-1]/(khanAnswers.lists.total(list)/total)))};
khanAnswers.algebra.algebraFoundations = {};
khanAnswers.algebra.algebraFoundations.evaluate = function(variableEquals,equation) {eval("var "+variableEquals+";");return(eval(equation))};
khanAnswers.algebra.algebraFoundations.evaluateMulti = function(listOfVariableEquals,equation) {for(var iterations=0;iterations<listOfVariableEquals.length;iterations++) {eval("var "+listOfVariableEquals[iterations]+";");};return(eval(equation))};
khanAnswers.data.cycle = function(cycleList,index,iterations) {return(cycleList[(index-1)+iterations % cycleList.length-1])};
khanAnswers.data.formulas = {};
khanAnswers.data.formulas.formulaToTable = function(expression) {var x=Math.floor(Math.random()*20-10);var result = [];result[0] = [x,eval(expression)];x=Math.floor(Math.random()*20-10);result[1]=[x,eval(expression)];return(result)};
khanAnswers.data.formulas.orderedPairTest = function(formula,X,Y) {var x = X;eval("var "+formula);return(y==Y)};
khanAnswers.data.formulas.iterateListFromFunction = function(start,iterationFunction,listLength) {var list = [start];for (var i=1;i<listLength;i++) {list[i] = eval("list[i-1]"+iterationFunction)};return(list)};
khanAnswers.data.formulas.tableFromRuleAndValues = function(xValuesList,rule) {var list=[];for (var i=0;i<xValuesList.length;i++) {var x=xValuesList[i];eval("var "+rule);list[i]=y;};return(list)};
khanAnswers.shapes.threeDimensions.volume = {};
khanAnswers.shapes.threeDimensions.volume.sphere = function(radius) {return(4/3*radius**3+"π")};
khanAnswers.shapes.threeDimensions.volume.cube = function(length) {return(length**3)};
khanAnswers.shapes.area.nGon = function(radius,sides) {return(sides*(radius**2)*Math.sin(2*Math.PI/sides)/2)};
khanAnswers.shapes.threeDimensions.volume.prism = function(areaOfBase,height) {return(areaOfBase*height)};
khanAnswers.shapes.threeDimensions.volume.pyramid = function(areaOfBase,height) {return(areaOfBase*height/3)};
khanAnswers.miscFunctions.arithmetic = {};
khanAnswers.miscFunctions.arithmetic.add = function(number1,number2) {return(number1+number2)};
khanAnswers.miscFunctions.arithmetic.oPlus = function(number1,number2) {return(1/(1/number1+1/number2))};
khanAnswers.miscFunctions.arithmetic.exp = function(number1,number2) {return(number1**number2)};
khanAnswers.miscFunctions.arithmetic.divide = function(number1,number2) {return(number1/number2)};
khanAnswers.miscFunctions.arithmetic.multiply = function(number1,number2) {return(number1*number2)};
khanAnswers.miscFunctions.arithmetic.subtract = function(number1,number2) {return(number1-number2)};
khanAnswers.constants = {};
khanAnswers.constants.pi = Math.PI;
khanAnswers.constants.e = Math.E;
khanAnswers.constants.goldenRatio = (1+khanAnswers.miscFunctions.squareRoot(5))/2;
khanAnswers.constants.phi = khanAnswers.constants.goldenRatio;